/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_PB_BACKUP_PB_H_INCLUDED
#define PB_PB_BACKUP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _pb_ReadBackup { 
    int32_t read_from; 
} pb_ReadBackup;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define pb_ReadBackup_init_default               {0}
#define pb_ReadBackup_init_zero                  {0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_ReadBackup_read_from_tag              1

/* Struct field encoding specification for nanopb */
#define pb_ReadBackup_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    read_from,         1)
#define pb_ReadBackup_CALLBACK NULL
#define pb_ReadBackup_DEFAULT NULL

extern const pb_msgdesc_t pb_ReadBackup_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pb_ReadBackup_fields &pb_ReadBackup_msg

/* Maximum encoded size of messages (where known) */
#define pb_ReadBackup_size                       11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
